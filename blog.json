[{
    "blogName": "Alecs Thoughs",
    "description": "I enjoy programming and design, but in the free time I love skiing, skateboarding, and really any winter sports!",
    "picture": "https://github.com/alechash.png",
    "github": "https://github.com/alechash",
    "website": "https://alecw.net",
    "articles": [{
        "title": "Google’s Toxic Relationship with China and Dragonfly",
        "photo": "dragonfly.jpg",
        "tags": ["google", "chrome", "tensorflow", "dragonfly", "china", "search-engine"],
        "date": "January 20th, 2021",
        "id": "3",
        "pinned": false,
        "body": [
            "header:Google China",
            "When Google first launched Google China, a Chinese search engine; it faced a problem, censorship. China is now well known as a censored country and it always has been. When Google first entered China, they were forced to censor certain search results that the Chinese government didn’t approve of. Google had to comply, but they pinned an alert to the webpage that some results had been censored by the Chinese government.",
            "Although China didn’t like this, Google did have the leverage of Silicon Valley and a billion dollar company. China then allowed this alert to be displayed. Other Chinese-based search engines followed suit like Baidu.",
            "As Google China continues to censor results and bend over to the Chinese Government, some Google executives in California were not very happy what Google China was doing. In 2010, Google China ceased operations in mainland China and moved the search engine to Hong Kong. Googles statement says they do not want to continue censoring results and comply with the Chinese Communist Party. Although Google couldn’t bring a search engine into China, they did manage to get other services available. These include Google Maps, Gmail, and YouTube. Although in mid-2014, Mainland China blocked almost all Google products including Google Maps, Gmail, YouTube, and Google Scholar.",
            "China eventually allowed TensorFlow, an AI software library developed by Google Brain. The Chinese Communist Party saw this as a win, they could take advantage of AI software like TensorFlow, an AI center in Beijing owned by Google, and still not allowing Google search market access.",
            "Although the Google China project was an apparent fail along with Chinese versions of Gmail, Google Maps, and YouTube; Google still wanted to find a way into China. They did, and they called it Dragonfly.",
            "widget:email",
            "header:Dragonfly",
            "Dragonfly was a prototype search engine made by Google that followed Chinese censorship laws. Although it would have followed censorship laws, it still needed to be approved by the Chinese government. In 2018, then vice-president, Mike Pence told Google to kill Dragonfly; saying it would “strengthen Communist Party censorship and compromise the privacy of Chinese customers.”",
            "Following vice-president Mike Pence’s claims, in mid-December the Intercept reported that Google has suspended [1] its efforts on dragonfly due to complaints from the companies own privacy team. However, according to employees, efforts on Dragonfly continued as of March of 2019 with 100 people still working on it.",
            "But, in July of 2019, Google publicly announced that Dragonfly had been terminated.",
            "header:Footnotes",
            "[1] https://theintercept.com/2018/12/17/google-china-censored-search-engine-2"
        ],
        "lists": [],
        "photos": [],
        "code": []
    }, {
        "title": "What About a Community Driven Search Engine?",
        "photo": null,
        "tags": ["cryptocurrency", "web-development", "search", "open-source"],
        "date": "January 20th, 2021",
        "id": "2",
        "pinned": false,
        "body": [
            "As we all know, open-source and community-driven projects are starting to gain traction around the internet. The decentralized idea of the internet is also starting to happen and crypto prices are at an all time high. So why doesn’t a decentralized or community driven search engine exist yet?",
            "header:The Idea",
            "The idea is a search engine who’s results were come up with by the community. Blockchain is the idea of multiple computers coming together as one decentralized computer and solving math problems together to earn digital coin.",
            "So, what if instead of solving math problems, they were crawling the web. And there was a central server where this information went to and was used in web search.",
            "How would a crawler get paid? Well, just like blockchain, through cryptocurrency. For example, SearchCoin.",
            "header:Building It",
            "You would need to build these items for this to work Software to run on peoples computers",
            "list:0",
            "header:Web Server",
            "First, you’d need a server. This server should just be a simple web server like a Nodejs web server that is connected to a database. This web server will also need a couple APIs that the crawling software will communicate with.",
            "Ideally you would have a database of URLs to be crawled. Either user-submitted or find by crawlers that the crawler could not get to. Crawling Software",
            "You could really do this with Electron. This software should communicate with the web server and receive URLs to crawl. It would then crawl these URLs and get information like description, title, and other meta stuff. It would then send this to the web server which would put it in a database. The server would verify this information and if verified, give the crawler some coin.",
            "The web server would then check this URL as crawled and would only re-crawl it again if prompted by a crawler or a user of the web interface.",
            "widget:email",
            "header:Web Interface",
            "This could just be as simple as an HTML input field that went to /search?q={query}. It would then show results. But, you could also have an input box to request a site to be crawled. It would then queue this site.",
            "header:SearchCoin",
            "This would just be a crypto coin or token that would be sent to people for crawling sites.",
            "header:Final Thoughts",
            "As you can probably tell, this idea is not completely fleshed out. Especially in the corners of the actual coin and how the server would verify this information.",
            "header:Why It Doesn’t Exist Now",
            "There are many reasons, including the fact that there are already a lot of search engines that people could choose from. Another reason is expenses. Or lack of community support.",
            "If you or anyone you know wants to act on this idea, please do, I could even help if you needed any."
        ],
        "lists": [{
            "list": ["A centralized server to accept data and send out coins", "A web interface for people to search on", "Ad network to generate revenue on the web interface", "A new coin to distribute to contributors"]
        }],
        "photos": [],
        "code": []
    }, {
        "title": "PGP Cheatsheet -- How to For macOS",
        "photo": "pgp.jpg",
        "tags": ["command-line", "cli", "pgp", "gpg", "encryption", "signing"],
        "date": "January 5th, 2021",
        "id": "1",
        "pinned": false,
        "body": [
            "Ok, I'm sure we have all heard of PGP but no one really understands it right? Yeah that's how I was until I actual researched it.",
            "In this article we will only talk about macOS, although it is all the same across most systems, some commands might be off by a few words or flags.",
            "header:Explanation",
            "PGP or [Pretty Good Privacy](https://en.wikipedia.org/wiki/Pretty_Good_Privacy), is just an encryption program that helps you cryptographically communicate and authenticate.",
            "So, in easier terms, it is just a program that encrypts stuff.",
            "header:PGP vs OpenPGP",
            "When discussing PGP these days we almost always mean OpenPGP. This is an open-source 100% compatible clone of the original PGP, which is now closed-source software owned by Symantec.",
            "Thanks to [Pro Privacy](https://proprivacy.com/) for this explanation.",
            "header:How does it work?",
            "PGP works by generating two keys, these two keys are",
            "list:0",
            "Someone can take your public key and and encrypt a message using their command line and send it to you. Using your private key, you decrypt this message. And vice versa with the other persons key.",
            "header:Generating Your Key",
            "First, you need to install PGP onto your computer,",
            "subhead:Installing",
            "To install PGP on macOS, just run:",
            "singlecode:brew install gpg pinentry-mac",
            "from Brew",
            "subhead:Setting up PGP",
            "singlecode:gpg --list-keys",
            "This will setup its file structure and install other necessary stuff.",
            "subhead:Creating Password",
            "All you need to do is edit the `$HOME/.gnupg/gpg-agent.conf` file.",
            "singlecode:echo \"pinentry-program /usr/local/bin/pinentry-mac\" >> $HOME/.gnupg/gpg-agent.conf",
            "This should prompt you with a popup asking for a password. Although it gives you the option to save in keychain, you shouldn't for security reasons. You have to remember this password. So write it down or store it on a hard drive.",
            "subhead:Generating Keys",
            "You can generate a key using",
            "singlecode:gpg --expert --full-generate-key",
            "All the extra flags will cause it to prompt you with settings and input.",
            "When prompted for a key type, select `(8) RSA (set your own capabilities)`",
            "Next, you want to toggle off sign and encrypt capabilities, to do this, type `s` and press `ENTER` when prompted to turn off signing abilities. Then, press `e` and press `ENTER` to turn off encrypt abilities. Lastly, press `q` to save this information.",
            "Now, when prompted for how long the key should be, you can type up to `4096`, that is the highest it currently goes. The longer the key, more secure it is. I recommend the max at `4096`.",
            "For expiration, I suggest picking `0` this means it will never expire.",
            "Next, to verify your identity, you should input your 100% real and legal name that your country knows you by. The same is with whatever email is your main email.",
            "If you'd like, you can also put a comment on the key, this isn't required. So we suggest leaving it blank.",
            "If everything looks good, hit `o` for okay.",
            "After this, it will prompt you for a password, this is the password for the key. Keep this secure, long, and unique.",
            "subhead:Exporting Keys",
            "To export your private key you can use:",
            "singlecode:gpg --export-secret-keys --armor YOUR@EMAIL.COM > YOUR@EMAIL.COM.private.gpg-key",
            "This key should NEVER leave you, this can be used to encrypt and decrypt secret messages.",
            "To export your public key you can use:",
            "singlecode:gpg --export --armor YOUR@EMAIL.COM > YOUR@EMAIL.COM.public.gpg-key",
            "This is public, people will use this to encrypt messages and send to you.",
            "subhead:Revocation Certificate",
            "Next, we will create a revocation certificate, this can be used to revoke the private key if it is ever compromised.",
            "singlecode:gpg --output YOUR@EMAIL.COM.gpg-revocation-certificate --gen-revoke YOUR@EMAIL.COM",
            "This is how you can create and export PGP keys, if you have any trouble please comment and hopefully the community can help! You can also run `pgp --help` to get help on doing stuff with these keys!",
            "widget:email"
        ],
        "lists": [{
            "list": ["the private key, only you know and should never be public", "and the public key, anyone can know, not secret."]
        }],
        "photos": [],
        "code": []
    }]
}]