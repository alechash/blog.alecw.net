I"ï<h1 id="what-are-they">What are they?</h1>

<p>Exports, or Module Exports, are functions, variables, classes, or other JavaScript that is written in one file, and accessed in another. You‚Äôll see Exports in big projects like website. Maintainers of large projects will use these for structure of their project.</p>

<p>Lot‚Äôs of times there will be multiple Export files. Like a file for functions, a file for config, and maybe a file for API keys/sensitive data.</p>

<hr />

<h1 id="how-do-i-create-one">How do I create one?</h1>

<p>It is actually very simple, imagine you have this in a file called <code class="language-plaintext highlighter-rouge">functions.js</code>:</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">randomNumber</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">randomNumber</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span>
    <span class="k">return</span> <span class="nx">randomNumber</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div></div>

<p>Now, to turn this into an export, all you have to do is add the below code:</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">randomNumber</span>
<span class="p">};</span>
</code></pre></div></div>

<p>This will tell NodeJS to make this file publicly available to other file, and also what variable, classes, or functions should be public.</p>

<p>Now let‚Äôs say you need to access the <code class="language-plaintext highlighter-rouge">randomNumber()</code> function in an Express routes file called <code class="language-plaintext highlighter-rouge">main.js</code> in the same folder You can ‚Äúrequire‚Äù the functions file by adding <code class="language-plaintext highlighter-rouge">const config = require(‚Äò./functions‚Äô)</code></p>

<p>Remember above, we had the <code class="language-plaintext highlighter-rouge">module.exports</code> with the name of the function? Well, now in the <code class="language-plaintext highlighter-rouge">main.js</code> file, we can use of constant <code class="language-plaintext highlighter-rouge">config</code> to access that function. We can access it in the following manner:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// note: you can call it whatever, it doesn't have to be 'config'</span>
<span class="kd">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">./functions</span><span class="dl">'</span><span class="p">);</span>  <span class="c1">// now we can call the above function through our config constant:</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">randomNumber</span><span class="p">())</span> <span class="c1">// a random decimal</span>
</code></pre></div></div>

<hr />

<h1 id="wrap-up">Wrap Up</h1>

<p>That is how you do it! It is as simple as that! Now you can go on the simplify and organize your files into exports!</p>

<p>If you‚Äôd like to know when I make more blog posts, you can input your email below and I‚Äôll email you when a new one comes out!</p>
:ET